{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"placeholder\", \"value\", \"onChangeText\", \"style\", \"primaryColor\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { useState } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { inputStyles } from \"./styles/input\";\nexport var Input = function Input(_ref) {\n  var placeholder = _ref.placeholder,\n    value = _ref.value,\n    onChangeText = _ref.onChangeText,\n    style = _ref.style,\n    primaryColor = _ref.primaryColor,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isFocused = _useState2[0],\n    setFocus = _useState2[1];\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(TextInput, _extends({\n    placeholder: placeholder,\n    style: [inputStyles.input, isFocused && inputStyles.inputFocusState && {\n      borderColor: primaryColor\n    }, style],\n    onFocus: function onFocus() {\n      setFocus(true);\n    },\n    onBlur: function onBlur() {\n      return setFocus(false);\n    },\n    value: value,\n    onChangeText: onChangeText\n  }, rest)));\n};\nvar styles = StyleSheet.create({\n  container: {\n    margin: 23\n  }\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAAA;AAAA;AAAA;AAEA,SAASC,WAAT;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAK,CAAGC,MAOV;EAAA,IANTC,WADoB,GAOXD,KANTC,WADoB;IAEpBC,KAFoB,GAOXF,KALTE,KAFoB;IAGpBC,YAHoB,GAOXH,KAJTG,YAHoB;IAIpBC,KAJoB,GAOXJ,KAHTI,KAJoB;IAKpBC,YALoB,GAOXL,KAFTK,YALoB;IAMjBC,gCACMN;EACT,gBAA8BH,QAAQ,CAAC,KAAD,CAAtC;IAAA;IAAOU,SAAD;IAAYC,QAAZ;EAEN,OACEZ,oBAACa,IAAD;IAAML,KAAK,EAAEM,MAAM,CAACC;EAApB,GACEf,oBAACgB,SAAD;IACEX,WAAW,EAAEA,WADf;IAEEG,KAAK,EAAE,CACLN,WAAW,CAACe,KADP,EAELN,SAAS,IACPT,WAAW,CAACgB,eADd,IACiC;MAAEC,WAAW,EAAEV;IAAf,CAH5B,EAILD,KAJK,CAFT;IAQEY,OAAO,EAAE,mBAAM;MACbR,QAAQ,CAAC,IAAD,CAAR;IACD,CAVH;IAWES,MAAM,EAAE;MAAA,OAAMT,QAAQ,CAAC,KAAD,CAXxB;IAAA;IAYEN,KAAK,EAAEA,KAZT;IAaEC,YAAY,EAAEA;EAbhB,GAcMG,IAdN,EADF,CADF;AAoBD,CA9BM;AAgCP,IAAMI,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;EAC/BR,SAAS,EAAE;IAAES,MAAM,EAAE;EAAV;AADoB,CAAlB,CAAf","names":["React","useState","inputStyles","Input","_ref","placeholder","value","onChangeText","style","primaryColor","rest","isFocused","setFocus","View","styles","container","TextInput","input","inputFocusState","borderColor","onFocus","onBlur","StyleSheet","create","margin"],"sources":["Input.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextInput, StyleSheet, View } from 'react-native';\nimport { inputStyles } from './styles/input';\n\nexport const Input = ({\n  placeholder,\n  value,\n  onChangeText,\n  style,\n  primaryColor,\n  ...rest\n}: any) => {\n  const [isFocused, setFocus] = useState(false);\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        placeholder={placeholder}\n        style={[\n          inputStyles.input,\n          isFocused &&\n            inputStyles.inputFocusState && { borderColor: primaryColor },\n          style,\n        ]}\n        onFocus={() => {\n          setFocus(true);\n        }}\n        onBlur={() => setFocus(false)}\n        value={value}\n        onChangeText={onChangeText}\n        {...rest}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: { margin: 23 },\n});\n"]},"metadata":{},"sourceType":"module"}