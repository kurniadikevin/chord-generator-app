{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as SplashScreen from 'expo-splash-screen';\nimport CustomText from \"./CustomText\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nSplashScreen.preventAutoHideAsync();\nexport default function Dashboard(props) {\n  var homeToggle = styles.buttonTextOnVisit;\n  var aboutToggle;\n  if (props.onVisitHome === 'true') {\n    homeToggle = styles.buttonTextOnVisit;\n    aboutToggle = styles.buttonText;\n  } else if (props.onVisitAbout === 'true') {\n    homeToggle = styles.buttonText;\n    aboutToggle = styles.buttonTextOnVisit;\n  }\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      style: styles.title,\n      children: _jsx(CustomText, {\n        children: _jsx(Text, {\n          style: {\n            fontSize: 24\n          },\n          children: \"Scale Chord Generator\"\n        })\n      })\n    }), _jsxs(View, {\n      style: styles.dashboard,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          props.navigation.navigate('Home');\n        },\n        style: {\n          paddingRight: 10\n        },\n        children: _jsx(CustomText, {\n          style: homeToggle,\n          children: \"Home\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          props.navigation.navigate('About');\n        },\n        children: _jsx(CustomText, {\n          style: aboutToggle,\n          children: \"About\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  title: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    paddingBottom: 5\n  },\n  dashboard: {\n    display: 'flex',\n    flexDirection: 'row',\n    height: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    text: {}\n  },\n  buttonStyle: {},\n  buttonText: {\n    fontSize: 16\n  },\n  buttonTextOnVisit: {\n    fontSize: 16,\n    fontWeight: '700'\n  }\n});","map":{"version":3,"names":["SplashScreen","CustomText","preventAutoHideAsync","Dashboard","props","homeToggle","styles","buttonTextOnVisit","aboutToggle","onVisitHome","buttonText","onVisitAbout","title","fontSize","dashboard","navigation","navigate","paddingRight","StyleSheet","create","display","flexDirection","justifyContent","paddingBottom","height","alignItems","text","buttonStyle","fontWeight"],"sources":["/home/kevin/Code Practice/chord-scale-app/Dashboard.js"],"sourcesContent":["import { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport * as SplashScreen from 'expo-splash-screen';\nimport CustomText from './CustomText';\n\n\nSplashScreen.preventAutoHideAsync();\n\n\nexport default function Dashboard(props){\n\n  let homeToggle=styles.buttonTextOnVisit;\n  let aboutToggle;\n\n  if(props.onVisitHome === 'true'){\n    homeToggle= styles.buttonTextOnVisit;\n    aboutToggle= styles.buttonText;\n  } else if(props.onVisitAbout==='true'){\n    homeToggle= styles.buttonText;\n    aboutToggle= styles.buttonTextOnVisit;\n  }\n\n    return(\n        <View>\n            <View style={styles.title}>\n            <CustomText>\n              <Text style={{fontSize : 24}}>Scale Chord Generator</Text>\n            </CustomText>\n        </View>\n        <View style={styles.dashboard}>\n            <TouchableOpacity  onPress={()=>{props.navigation.navigate('Home')\n              }} style={{paddingRight: 10}}>\n            <CustomText style={homeToggle}>\n              Home\n            </CustomText>\n            </TouchableOpacity>\n            <TouchableOpacity  onPress={()=>{\n              props.navigation.navigate('About');\n\n              }}>\n              <CustomText  style={aboutToggle}>\n              About\n              </CustomText>\n            </TouchableOpacity>\n        </View>\n        </View>\n    )\n}\n\n\nconst styles = StyleSheet.create({\n    title : {\n        display: 'flex',\n        flexDirection : 'row',\n        justifyContent: 'center',\n        paddingBottom: 5,\n      },\n      dashboard:{\n        display: 'flex',\n        flexDirection : 'row',\n        height: 30,\n        justifyContent: 'center',\n        alignItems:'center',\n\n        text : { \n        }\n      },\n      buttonStyle : {\n\n      },\n      buttonText:{\n        fontSize: 16\n      },\n      buttonTextOnVisit:{\n        fontSize: 16,\n        fontWeight:'700'\n      }\n\n})"],"mappings":";;;;AACA,OAAO,KAAKA,YAAY,MAAM,oBAAoB;AAClD,OAAOC,UAAU;AAAqB;AAAA;AAGtCD,YAAY,CAACE,oBAAoB,EAAE;AAGnC,eAAe,SAASC,SAAS,CAACC,KAAK,EAAC;EAEtC,IAAIC,UAAU,GAACC,MAAM,CAACC,iBAAiB;EACvC,IAAIC,WAAW;EAEf,IAAGJ,KAAK,CAACK,WAAW,KAAK,MAAM,EAAC;IAC9BJ,UAAU,GAAEC,MAAM,CAACC,iBAAiB;IACpCC,WAAW,GAAEF,MAAM,CAACI,UAAU;EAChC,CAAC,MAAM,IAAGN,KAAK,CAACO,YAAY,KAAG,MAAM,EAAC;IACpCN,UAAU,GAAEC,MAAM,CAACI,UAAU;IAC7BF,WAAW,GAAEF,MAAM,CAACC,iBAAiB;EACvC;EAEE,OACI,MAAC,IAAI;IAAA,WACD,KAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACM,KAAM;MAAA,UAC1B,KAAC,UAAU;QAAA,UACT,KAAC,IAAI;UAAC,KAAK,EAAE;YAACC,QAAQ,EAAG;UAAE,CAAE;UAAA,UAAC;QAAqB;MAAO;IAC/C,EACV,EACP,MAAC,IAAI;MAAC,KAAK,EAAEP,MAAM,CAACQ,SAAU;MAAA,WAC1B,KAAC,gBAAgB;QAAE,OAAO,EAAE,mBAAI;UAACV,KAAK,CAACW,UAAU,CAACC,QAAQ,CAAC,MAAM,CAAC;QAChE,CAAE;QAAC,KAAK,EAAE;UAACC,YAAY,EAAE;QAAE,CAAE;QAAA,UAC/B,KAAC,UAAU;UAAC,KAAK,EAAEZ,UAAW;UAAA,UAAC;QAE/B;MAAa,EACM,EACnB,KAAC,gBAAgB;QAAE,OAAO,EAAE,mBAAI;UAC9BD,KAAK,CAACW,UAAU,CAACC,QAAQ,CAAC,OAAO,CAAC;QAElC,CAAE;QAAA,UACF,KAAC,UAAU;UAAE,KAAK,EAAER,WAAY;UAAA,UAAC;QAEjC;MAAa,EACI;IAAA,EAChB;EAAA,EACA;AAEf;AAGA,IAAMF,MAAM,GAAGY,UAAU,CAACC,MAAM,CAAC;EAC7BP,KAAK,EAAG;IACJQ,OAAO,EAAE,MAAM;IACfC,aAAa,EAAG,KAAK;IACrBC,cAAc,EAAE,QAAQ;IACxBC,aAAa,EAAE;EACjB,CAAC;EACDT,SAAS,EAAC;IACRM,OAAO,EAAE,MAAM;IACfC,aAAa,EAAG,KAAK;IACrBG,MAAM,EAAE,EAAE;IACVF,cAAc,EAAE,QAAQ;IACxBG,UAAU,EAAC,QAAQ;IAEnBC,IAAI,EAAG,CACP;EACF,CAAC;EACDC,WAAW,EAAG,CAEd,CAAC;EACDjB,UAAU,EAAC;IACTG,QAAQ,EAAE;EACZ,CAAC;EACDN,iBAAiB,EAAC;IAChBM,QAAQ,EAAE,EAAE;IACZe,UAAU,EAAC;EACb;AAEN,CAAC,CAAC"},"metadata":{},"sourceType":"module"}