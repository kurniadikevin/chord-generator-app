{"ast":null,"code":"import React, { memo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport CheckBox from '@react-native-community/checkbox';\nimport { colors } from \"./styles/colors\";\nvar DropdownListItem = function DropdownListItem(_ref) {\n  var item = _ref.item,\n    optionLabel = _ref.optionLabel,\n    optionValue = _ref.optionValue,\n    isMultiple = _ref.isMultiple,\n    selectedOption = _ref.selectedOption,\n    _onChange = _ref.onChange,\n    primaryColor = _ref.primaryColor;\n  var selectedOptionValue = optionValue !== null && optionValue !== void 0 ? optionValue : 'value';\n  return React.createElement(TouchableOpacity, {\n    style: styles.modalOptions,\n    onPress: function onPress() {\n      return _onChange(item[selectedOptionValue]);\n    }\n  }, React.createElement(View, {\n    style: styles.spacing\n  }, React.createElement(CheckBox, {\n    value: isMultiple ? selectedOption.includes(item[selectedOptionValue]) : [selectedOption].includes(item[selectedOptionValue]),\n    onChange: function onChange() {\n      return _onChange(item[selectedOptionValue]);\n    },\n    boxType: \"circle\",\n    tintColors: {\n      true: primaryColor || colors.primary\n    },\n    onCheckColor: primaryColor || colors.primary,\n    onTintColor: primaryColor || colors.primary\n  })), React.createElement(View, null, React.createElement(Text, null, item[optionLabel !== null && optionLabel !== void 0 ? optionLabel : 'label'])));\n};\nvar styles = StyleSheet.create({\n  spacing: {\n    marginRight: 10\n  },\n  modalOptions: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    flexDirection: 'row',\n    alignItems: 'center'\n  }\n});\nexport default memo(DropdownListItem);","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AAAA;AAAA;AAAA;AAAA;AAEA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,MAAT;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAGC,MAQd;EAAA,IAPTC,IADwB,GAQfD,KAPTC,IADwB;IAExBC,WAFwB,GAQfF,KANTE,WAFwB;IAGxBC,WAHwB,GAQfH,KALTG,WAHwB;IAIxBC,UAJwB,GAQfJ,KAJTI,UAJwB;IAKxBC,cALwB,GAQfL,KAHTK,cALwB;IAMxBC,SANwB,GAQfN,KAFTM,QANwB;IAOxBC,eACSP,KADTO;EAEA,IAAMC,mBAAmB,GAAGL,WAAH,aAAGA,WAAH,cAAGA,WAAH,GAAkB,OAA3C;EACA,OACER,oBAACc,gBAAD;IACEC,KAAK,EAAEC,MAAM,CAACC,YADhB;IAEEC,OAAO,EAAE;MAAA,OAAMP,SAAQ,CAACL,IAAI,CAACO,mBAAD,CAAL;IAAA;EAFzB,GAIEb,oBAACmB,IAAD;IAAMJ,KAAK,EAAEC,MAAM,CAACI;EAApB,GACEpB,oBAACE,QAAD;IACEmB,KAAK,EACHZ,UAAU,GACNC,cAAc,CAACY,QAAf,CAAwBhB,IAAI,CAACO,mBAAD,CAA5B,CADM,GAEN,CAACH,cAAD,EAAiBY,QAAjB,CAA0BhB,IAAI,CAACO,mBAAD,CAA9B,CAJR;IAMEF,QAAQ,EAAE;MAAA,OAAMA,SAAQ,CAACL,IAAI,CAACO,mBAAD,CAAL,CAN1B;IAAA;IAOEU,OAAO,EAAC,QAPV;IAQEC,UAAU,EAAE;MAAEC,IAAI,EAAEb,YAAY,IAAIT,MAAM,CAACuB;IAA/B,CARd;IASEC,YAAY,EAAEf,YAAY,IAAIT,MAAM,CAACuB,OATvC;IAUEE,WAAW,EAAEhB,YAAY,IAAIT,MAAM,CAACuB;EAVtC,EADF,CAJF,EAkBE1B,oBAACmB,IAAD,QACEnB,oBAAC6B,IAAD,QAAOvB,IAAI,CAACC,WAAD,aAACA,WAAD,cAACA,WAAD,GAAgB,OAAhB,CAAX,CADF,CAlBF,CADF;AAwBD,CAlCD;AAoCA,IAAMS,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;EAC/BX,OAAO,EAAE;IAAEY,WAAW,EAAE;EAAf,CADsB;EAE/Bf,YAAY,EAAE;IACZgB,iBAAiB,EAAE,EADP;IAEZC,eAAe,EAAE,EAFL;IAGZC,aAAa,EAAE,KAHH;IAIZC,UAAU,EAAE;EAJA;AAFiB,CAAlB,CAAf;AAUA,eAAenC,IAAI,CAACG,gBAAD,CAAnB","names":["React","memo","CheckBox","colors","DropdownListItem","_ref","item","optionLabel","optionValue","isMultiple","selectedOption","onChange","primaryColor","selectedOptionValue","TouchableOpacity","style","styles","modalOptions","onPress","View","spacing","value","includes","boxType","tintColors","true","primary","onCheckColor","onTintColor","Text","StyleSheet","create","marginRight","paddingHorizontal","paddingVertical","flexDirection","alignItems"],"sources":["DropdownListItem.tsx"],"sourcesContent":["import React, { memo } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport CheckBox from '@react-native-community/checkbox';\nimport { colors } from './styles/colors';\n\nconst DropdownListItem = ({\n  item,\n  optionLabel,\n  optionValue,\n  isMultiple,\n  selectedOption,\n  onChange,\n  primaryColor,\n}: any) => {\n  const selectedOptionValue = optionValue ?? 'value';\n  return (\n    <TouchableOpacity\n      style={styles.modalOptions}\n      onPress={() => onChange(item[selectedOptionValue])}\n    >\n      <View style={styles.spacing}>\n        <CheckBox\n          value={\n            isMultiple\n              ? selectedOption.includes(item[selectedOptionValue])\n              : [selectedOption].includes(item[selectedOptionValue])\n          }\n          onChange={() => onChange(item[selectedOptionValue])}\n          boxType=\"circle\" //works on ios only\n          tintColors={{ true: primaryColor || colors.primary }} //android control\n          onCheckColor={primaryColor || colors.primary} //ios checkmark colour control\n          onTintColor={primaryColor || colors.primary} //ios box colour control\n        />\n      </View>\n      <View>\n        <Text>{item[optionLabel ?? 'label']}</Text>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  spacing: { marginRight: 10 },\n  modalOptions: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});\n\nexport default memo(DropdownListItem);\n"]},"metadata":{},"sourceType":"module"}