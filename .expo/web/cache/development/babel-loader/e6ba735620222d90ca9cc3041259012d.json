{"ast":null,"code":"var notes = ['C', 'C#', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'];\nvar chord = function chord(roots, type) {\n  if (type === 'Mayor') {\n    var root = roots.charAt(0).toUpperCase() + roots.slice(1);\n    var rootIndex = notes.indexOf(root);\n    var thirdIndex;\n    if (rootIndex + 4 > 11) {\n      thirdIndex = rootIndex + 4 - notes.length;\n    } else {\n      thirdIndex = rootIndex + 4;\n    }\n    var fifthIndex;\n    if (rootIndex + 7 > 11) {\n      fifthIndex = rootIndex + 7 - notes.length;\n    } else {\n      fifthIndex = rootIndex + 7;\n    }\n    var arrResult = [notes[rootIndex], notes[thirdIndex], notes[fifthIndex]];\n    return arrResult.join(' ');\n  } else if (type === 'Minor') {\n    var _root = roots.charAt(0).toUpperCase() + roots.slice(1);\n    var _rootIndex = notes.indexOf(_root);\n    var _thirdIndex;\n    if (_rootIndex + 3 > 11) {\n      _thirdIndex = _rootIndex + 3 - notes.length;\n    } else {\n      _thirdIndex = _rootIndex + 3;\n    }\n    var _fifthIndex;\n    if (_rootIndex + 7 > 11) {\n      _fifthIndex = _rootIndex + 7 - notes.length;\n    } else {\n      _fifthIndex = _rootIndex + 7;\n    }\n    var _arrResult = [notes[_rootIndex], notes[_thirdIndex], notes[_fifthIndex]];\n    return _arrResult.join(' ');\n  } else if (type === 'Mayor7') {\n    var _root2 = roots.charAt(0).toUpperCase() + roots.slice(1);\n    var _rootIndex2 = notes.indexOf(_root2);\n    var _thirdIndex2;\n    if (_rootIndex2 + 4 > 11) {\n      _thirdIndex2 = _rootIndex2 + 4 - notes.length;\n    } else {\n      _thirdIndex2 = _rootIndex2 + 4;\n    }\n    var _fifthIndex2;\n    if (_rootIndex2 + 7 > 11) {\n      _fifthIndex2 = _rootIndex2 + 7 - notes.length;\n    } else {\n      _fifthIndex2 = _rootIndex2 + 7;\n    }\n    var seventhIndex;\n    if (_rootIndex2 + 11 > 11) {\n      seventhIndex = _rootIndex2 + 11 - notes.length;\n    } else {\n      seventhIndex = _rootIndex2 + 11;\n    }\n    var _arrResult2 = [notes[_rootIndex2], notes[_thirdIndex2], notes[_fifthIndex2], notes[seventhIndex]];\n    return _arrResult2.join(' ');\n  } else if (type === 'Minor7') {\n    var _root3 = roots.charAt(0).toUpperCase() + roots.slice(1);\n    var _rootIndex3 = notes.indexOf(_root3);\n    var _thirdIndex3;\n    if (_rootIndex3 + 3 > 11) {\n      _thirdIndex3 = notes[_rootIndex3 + 3 - notes.length];\n    } else {\n      _thirdIndex3 = notes[_rootIndex3 + 3];\n    }\n    var _fifthIndex3;\n    if (_rootIndex3 + 7 > 11) {\n      _fifthIndex3 = _rootIndex3 + 7 - notes.length;\n    } else {\n      _fifthIndex3 = _rootIndex3 + 7;\n    }\n    var _seventhIndex;\n    if (_rootIndex3 + 10 > 11) {\n      _seventhIndex = _rootIndex3 + 10 - notes.length;\n    } else {\n      _seventhIndex = _rootIndex3 + 10;\n    }\n    var _arrResult3 = [notes[_rootIndex3], _thirdIndex3, notes[_fifthIndex3], notes[_seventhIndex]];\n    return _arrResult3.join(' ');\n  } else if (type === 'Dominant7') {\n    var _root4 = roots.charAt(0).toUpperCase() + roots.slice(1);\n    var _rootIndex4 = notes.indexOf(_root4);\n    var _thirdIndex4;\n    if (_rootIndex4 + 4 > 11) {\n      _thirdIndex4 = _rootIndex4 + 4 - notes.length;\n    } else {\n      _thirdIndex4 = _rootIndex4 + 4;\n    }\n    var _fifthIndex4;\n    if (_rootIndex4 + 7 > 11) {\n      _fifthIndex4 = _rootIndex4 + 7 - notes.length;\n    } else {\n      _fifthIndex4 = _rootIndex4 + 7;\n    }\n    var _seventhIndex2;\n    if (_rootIndex4 + 10 > 11) {\n      _seventhIndex2 = _rootIndex4 + 10 - notes.length;\n    } else {\n      _seventhIndex2 = _rootIndex4 + 10;\n    }\n    var _arrResult4 = [notes[_rootIndex4], notes[_thirdIndex4], notes[_fifthIndex4], notes[_seventhIndex2]];\n    return _arrResult4.join(' ');\n  } else if (type === 'Diminished') {\n    var _root5 = roots.charAt(0).toUpperCase() + roots.slice(1);\n    var _rootIndex5 = notes.indexOf(_root5);\n    var _thirdIndex5;\n    if (_rootIndex5 + 4 > 11) {\n      _thirdIndex5 = _rootIndex5 + 4 - notes.length;\n    } else {\n      _thirdIndex5 = _rootIndex5 + 4;\n    }\n    var _fifthIndex5;\n    if (_rootIndex5 + 6 > 11) {\n      _fifthIndex5 = _rootIndex5 + 6 - notes.length;\n    } else {\n      _fifthIndex5 = _rootIndex5 + 6;\n    }\n    var _arrResult5 = [notes[_rootIndex5], notes[_thirdIndex5], notes[_fifthIndex5]];\n    return _arrResult5.join(' ');\n  } else if (type === 'Augmented') {\n    var _root6 = roots.charAt(0).toUpperCase() + roots.slice(1);\n    var _rootIndex6 = notes.indexOf(_root6);\n    var _thirdIndex6;\n    if (_rootIndex6 + 4 > 11) {\n      _thirdIndex6 = _rootIndex6 + 4 - notes.length;\n    } else {\n      _thirdIndex6 = _rootIndex6 + 4;\n    }\n    var _fifthIndex6;\n    if (_rootIndex6 + 8 > 11) {\n      _fifthIndex6 = _rootIndex6 + 8 - notes.length;\n    } else {\n      _fifthIndex6 = _rootIndex6 + 8;\n    }\n    var _arrResult6 = [notes[_rootIndex6], notes[_thirdIndex6], notes[_fifthIndex6]];\n    return _arrResult6.join(' ');\n  } else if (type === 'Half-Diminished7') {\n    var _root7 = roots.charAt(0).toUpperCase() + roots.slice(1);\n    var _rootIndex7 = notes.indexOf(_root7);\n    var _thirdIndex7;\n    if (_rootIndex7 + 3 > 11) {\n      _thirdIndex7 = notes[_rootIndex7 + 3 - notes.length];\n    } else {\n      _thirdIndex7 = notes[_rootIndex7 + 3];\n    }\n    var _fifthIndex7;\n    if (_rootIndex7 + 6 > 11) {\n      _fifthIndex7 = _rootIndex7 + 6 - notes.length;\n    } else {\n      _fifthIndex7 = _rootIndex7 + 6;\n    }\n    var _seventhIndex3;\n    if (_rootIndex7 + 10 > 11) {\n      _seventhIndex3 = _rootIndex7 + 10 - notes.length;\n    } else {\n      _seventhIndex3 = _rootIndex7 + 10;\n    }\n    var _arrResult7 = [notes[_rootIndex7], _thirdIndex7, notes[_fifthIndex7], notes[_seventhIndex3]];\n    return _arrResult7.join(' ');\n  } else if (type === 'Diminished7') {\n    var _root8 = roots.charAt(0).toUpperCase() + roots.slice(1);\n    var _rootIndex8 = notes.indexOf(_root8);\n    var _thirdIndex8;\n    if (_rootIndex8 + 3 > 11) {\n      _thirdIndex8 = notes[_rootIndex8 + 3 - notes.length];\n    } else {\n      _thirdIndex8 = notes[_rootIndex8 + 3];\n    }\n    var _fifthIndex8;\n    if (_rootIndex8 + 6 > 11) {\n      _fifthIndex8 = _rootIndex8 + 6 - notes.length;\n    } else {\n      _fifthIndex8 = _rootIndex8 + 6;\n    }\n    var _seventhIndex4;\n    if (_rootIndex8 + 9 > 11) {\n      _seventhIndex4 = _rootIndex8 + 9 - notes.length;\n    } else {\n      _seventhIndex4 = _rootIndex8 + 9;\n    }\n    var _arrResult8 = [notes[_rootIndex8], _thirdIndex8, notes[_fifthIndex8], notes[_seventhIndex4]];\n    return _arrResult8.join(' ');\n  } else if (type === 'Augmented7') {\n    var _root9 = roots.charAt(0).toUpperCase() + roots.slice(1);\n    var _rootIndex9 = notes.indexOf(_root9);\n    var _thirdIndex9;\n    if (_rootIndex9 + 4 > 11) {\n      _thirdIndex9 = _rootIndex9 + 4 - notes.length;\n    } else {\n      _thirdIndex9 = _rootIndex9 + 4;\n    }\n    var _fifthIndex9;\n    if (_rootIndex9 + 8 > 11) {\n      _fifthIndex9 = _rootIndex9 + 8 - notes.length;\n    } else {\n      _fifthIndex9 = _rootIndex9 + 8;\n    }\n    var _seventhIndex5;\n    if (_rootIndex9 + 10 > 11) {\n      _seventhIndex5 = _rootIndex9 + 10 - notes.length;\n    } else {\n      _seventhIndex5 = _rootIndex9 + 10;\n    }\n    var _arrResult9 = [notes[_rootIndex9], notes[_thirdIndex9], notes[_fifthIndex9], notes[_seventhIndex5]];\n    return _arrResult9.join(' ');\n  } else if (type === 'Mayor9') {\n    var _root10 = roots.charAt(0).toUpperCase() + roots.slice(1);\n    var _rootIndex10 = notes.indexOf(_root10);\n    var extentionIndex;\n    if (_rootIndex10 + 2 > 11) {\n      extentionIndex = _rootIndex10 + 2 - notes.length;\n    } else {\n      extentionIndex = _rootIndex10 + 2;\n    }\n    return chord(roots, 'Mayor7') + ' ' + notes[extentionIndex];\n  } else if (type === 'Minor9') {\n    var _root11 = roots.charAt(0).toUpperCase() + roots.slice(1);\n    var _rootIndex11 = notes.indexOf(_root11);\n    var _extentionIndex;\n    if (_rootIndex11 + 2 > 11) {\n      _extentionIndex = _rootIndex11 + 2 - notes.length;\n    } else {\n      _extentionIndex = _rootIndex11 + 2;\n    }\n    return chord(roots, 'Minor7') + ' ' + notes[_extentionIndex];\n  } else if (type === 'Dominant9') {\n    var _root12 = roots.charAt(0).toUpperCase() + roots.slice(1);\n    var _rootIndex12 = notes.indexOf(_root12);\n    var _extentionIndex2;\n    if (_rootIndex12 + 2 > 11) {\n      _extentionIndex2 = _rootIndex12 + 2 - notes.length;\n    } else {\n      _extentionIndex2 = _rootIndex12 + 2;\n    }\n    return chord(roots, 'Dominant7') + ' ' + notes[_extentionIndex2];\n  } else if (type === 'Mayor11') {\n    var _root13 = roots.charAt(0).toUpperCase() + roots.slice(1);\n    var _rootIndex13 = notes.indexOf(_root13);\n    var _extentionIndex3;\n    if (_rootIndex13 + 5 > 11) {\n      _extentionIndex3 = _rootIndex13 + 5 - notes.length;\n    } else {\n      _extentionIndex3 = _rootIndex13 + 5;\n    }\n    return chord(roots, 'Mayor9') + ' ' + notes[_extentionIndex3];\n  } else if (type === 'Minor11') {\n    var _root14 = roots.charAt(0).toUpperCase() + roots.slice(1);\n    var _rootIndex14 = notes.indexOf(_root14);\n    var _extentionIndex4;\n    if (_rootIndex14 + 5 > 11) {\n      _extentionIndex4 = _rootIndex14 + 5 - notes.length;\n    } else {\n      _extentionIndex4 = _rootIndex14 + 5;\n    }\n    return chord(roots, 'Minor9') + ' ' + notes[_extentionIndex4];\n  } else if (type === 'Dominant11') {\n    var _root15 = roots.charAt(0).toUpperCase() + roots.slice(1);\n    var _rootIndex15 = notes.indexOf(_root15);\n    var _extentionIndex5;\n    if (_rootIndex15 + 5 > 11) {\n      _extentionIndex5 = _rootIndex15 + 5 - notes.length;\n    } else {\n      _extentionIndex5 = _rootIndex15 + 5;\n    }\n    return chord(roots, 'Dominant9') + ' ' + notes[_extentionIndex5];\n  } else if (type === 'Mayor13') {\n    var _root16 = roots.charAt(0).toUpperCase() + roots.slice(1);\n    var _rootIndex16 = notes.indexOf(_root16);\n    var _extentionIndex6;\n    if (_rootIndex16 + 9 > 11) {\n      _extentionIndex6 = _rootIndex16 + 9 - notes.length;\n    } else {\n      _extentionIndex6 = _rootIndex16 + 9;\n    }\n    return chord(roots, 'Mayor11') + ' ' + notes[_extentionIndex6];\n  } else if (type === 'Minor13') {\n    var _root17 = roots.charAt(0).toUpperCase() + roots.slice(1);\n    var _rootIndex17 = notes.indexOf(_root17);\n    var _extentionIndex7;\n    if (_rootIndex17 + 9 > 11) {\n      _extentionIndex7 = _rootIndex17 + 9 - notes.length;\n    } else {\n      _extentionIndex7 = _rootIndex17 + 9;\n    }\n    return chord(roots, 'Minor11') + ' ' + notes[_extentionIndex7];\n  } else if (type === 'Dominant13') {\n    var _root18 = roots.charAt(0).toUpperCase() + roots.slice(1);\n    var _rootIndex18 = notes.indexOf(_root18);\n    var _extentionIndex8;\n    if (_rootIndex18 + 9 > 11) {\n      _extentionIndex8 = _rootIndex18 + 9 - notes.length;\n    } else {\n      _extentionIndex8 = _rootIndex18 + 9;\n    }\n    return chord(roots, 'Dominant11') + ' ' + notes[_extentionIndex8];\n  }\n};\nexport { chord };","map":{"version":3,"names":["notes","chord","roots","type","root","charAt","toUpperCase","slice","rootIndex","indexOf","thirdIndex","length","fifthIndex","arrResult","join","seventhIndex","extentionIndex"],"sources":["/home/kevin/Code Practice/chord-scale-app/chord-logic.js"],"sourcesContent":["//sharp system\n//const notes =['C','C#','D','D#','E','F','F#','G','G#','A','A#','B'];\n\n//sharp and flat system\nconst notes =['C','C#','D','Eb','E','F','F#','G','Ab','A','Bb','B'];\n\nconst chord = function (roots,type){\n\n  //MAYOR\n  if(type ==='Mayor'){\n  let root = roots.charAt(0).toUpperCase() + roots.slice(1);  \n  let rootIndex= notes.indexOf(root);\n  \n  //third mayor\n  let thirdIndex;\n      if((rootIndex+4) > 11){\n    thirdIndex = (rootIndex + 4) - notes.length;\n  } else{\n    thirdIndex= rootIndex+4;\n  }\n    \n  let fifthIndex;\n    if(rootIndex+7 > 11){\n    fifthIndex = (rootIndex + 7) - notes.length;\n  } else{\n    fifthIndex= rootIndex+7;\n  }\n    \n  let arrResult = [notes[rootIndex],notes[thirdIndex],notes[fifthIndex]]\n    return arrResult.join(' ');\n  }\n\n  //MINOR\n  else if(type === 'Minor'){\n    let root = roots.charAt(0).toUpperCase() + roots.slice(1);\n    \n    let rootIndex= notes.indexOf(root);\n      \n    //third minor\n    let thirdIndex;\n    if((rootIndex+3) > 11){\n     thirdIndex = (rootIndex + 3) - notes.length;\n    } else{\n     thirdIndex= rootIndex+3;\n    }\n\n    //fifth index\n    let fifthIndex;\n      if(rootIndex+7 > 11){\n      fifthIndex = (rootIndex + 7) - notes.length;\n    } else{\n      fifthIndex= rootIndex+7;\n    }\n\n    let arrResult = [notes[rootIndex],notes[thirdIndex] ,notes[fifthIndex]]\n      return arrResult.join(' ');\n  }\n\n  //MAYOR7\n  else if(type === 'Mayor7'){\n    let root = roots.charAt(0).toUpperCase() + roots.slice(1); \n    let rootIndex= notes.indexOf(root);\n      \n    //third mayor\n    let thirdIndex;\n        if((rootIndex+4) > 11){\n      thirdIndex = (rootIndex + 4) - notes.length;\n    } else{\n      thirdIndex= rootIndex+4;\n    }\n      \n    let fifthIndex;\n      if(rootIndex+7 > 11){\n      fifthIndex = (rootIndex + 7) - notes.length;\n    } else{\n      fifthIndex= rootIndex+7;\n    }\n    \n    //seventh mayor\n    let seventhIndex;\n    if(rootIndex+11 > 11){\n      seventhIndex = (rootIndex + 11) - notes.length;\n    } else{\n      seventhIndex= rootIndex+11;\n    }\n\n    let arrResult = [notes[rootIndex],notes[thirdIndex],notes[fifthIndex],notes[seventhIndex]];\n      return arrResult.join(' ');\n    }\n\n    //MINOR7\n    else if(type === 'Minor7'){\n      let root = roots.charAt(0).toUpperCase() + roots.slice(1);\n      \n      let rootIndex= notes.indexOf(root);\n        \n      //third index minor\n      let thirdIndex;\n      if((rootIndex+3) > 11){\n       thirdIndex = notes[(rootIndex + 3) - notes.length];\n      } else{\n       thirdIndex= notes[rootIndex+3];\n      }\n  \n      //fifth index\n      let fifthIndex;\n        if(rootIndex+7 > 11){\n        fifthIndex = (rootIndex + 7) - notes.length;\n      } else{\n        fifthIndex= rootIndex+7;\n      }\n\n      //seventh index minor\n      let seventhIndex;\n      if((rootIndex+10) > 11){\n        seventhIndex = (rootIndex + 10) - notes.length;\n       } else{\n        seventhIndex= rootIndex+10;\n       }\n  \n      let arrResult = [notes[rootIndex],thirdIndex ,notes[fifthIndex],notes[seventhIndex]];\n        return arrResult.join(' ');\n    }\n\n    //DOMINANT7\n  else if(type === 'Dominant7'){\n    let root = roots.charAt(0).toUpperCase() + roots.slice(1); \n    let rootIndex= notes.indexOf(root);\n    \n    //mayor\n    let thirdIndex;\n        if((rootIndex+4) > 11){\n      thirdIndex = (rootIndex + 4) - notes.length;\n    } else{\n      thirdIndex= rootIndex+4;\n    }\n      \n    let fifthIndex;\n      if(rootIndex+7 > 11){\n      fifthIndex = (rootIndex + 7) - notes.length;\n    } else{\n      fifthIndex= rootIndex+7;\n    }\n    // minor \n    let seventhIndex;\n    if(rootIndex+10 > 11){\n      seventhIndex = (rootIndex + 10) - notes.length;\n    } else{\n      seventhIndex= rootIndex+10;\n    }\n\n    let arrResult = [notes[rootIndex],notes[thirdIndex],notes[fifthIndex],notes[seventhIndex]];\n      return arrResult.join(' ');\n    }\n\n  //DIMINISHED TRIAD\n  else if(type === 'Diminished'){\n    let root = roots.charAt(0).toUpperCase() + roots.slice(1);\n    \n    let rootIndex= notes.indexOf(root);\n      \n    //third mayor\n    let thirdIndex;\n    if((rootIndex+4) > 11){\n     thirdIndex = (rootIndex + 4) - notes.length;\n    } else{\n     thirdIndex= rootIndex+4;\n    }\n\n    //flat fifth index\n    let fifthIndex;\n      if(rootIndex+6 > 11){\n      fifthIndex = (rootIndex + 6) - notes.length;\n    } else{\n      fifthIndex= rootIndex+6;\n    }\n\n    let arrResult = [notes[rootIndex],notes[thirdIndex] ,notes[fifthIndex]]\n      return arrResult.join(' ');\n  }\n\n  //AUGMENTED TRIAD\n  else if(type === 'Augmented'){\n    let root = roots.charAt(0).toUpperCase() + roots.slice(1);\n    \n    let rootIndex= notes.indexOf(root);\n      \n    //third mayor\n    let thirdIndex;\n    if((rootIndex+4) > 11){\n     thirdIndex = (rootIndex + 4) - notes.length;\n    } else{\n     thirdIndex= rootIndex+4;\n    }\n\n    //sharp fifth index\n    let fifthIndex;\n      if(rootIndex+8 > 11){\n      fifthIndex = (rootIndex + 8) - notes.length;\n    } else{\n      fifthIndex= rootIndex+8;\n    }\n\n    let arrResult = [notes[rootIndex],notes[thirdIndex] ,notes[fifthIndex]]\n      return arrResult.join(' ');\n  }\n\n  //HALF-DIMINISHED7\n  else if(type === 'Half-Diminished7'){\n    let root = roots.charAt(0).toUpperCase() + roots.slice(1);\n    \n    let rootIndex= notes.indexOf(root);\n      \n    //third index minor\n    let thirdIndex;\n    if((rootIndex+3) > 11){\n     thirdIndex = notes[(rootIndex + 3) - notes.length];\n    } else{\n     thirdIndex= notes[rootIndex+3];\n    }\n\n    //flat fifth index\n    let fifthIndex;\n      if(rootIndex+6 > 11){\n      fifthIndex = (rootIndex + 6) - notes.length;\n    } else{\n      fifthIndex= rootIndex+6;\n    }\n\n    //seventh index minor\n    let seventhIndex;\n    if((rootIndex+10) > 11){\n      seventhIndex = (rootIndex + 10) - notes.length;\n     } else{\n      seventhIndex= rootIndex+10;\n     }\n\n    let arrResult = [notes[rootIndex],thirdIndex ,notes[fifthIndex],notes[seventhIndex]];\n      return arrResult.join(' ');\n  }\n\n  //DIMINISHED7\n   else if(type === 'Diminished7'){\n    let root = roots.charAt(0).toUpperCase() + roots.slice(1);\n    \n    let rootIndex= notes.indexOf(root);\n      \n    //third index minor\n    let thirdIndex;\n    if((rootIndex+3) > 11){\n     thirdIndex = notes[(rootIndex + 3) - notes.length];\n    } else{\n     thirdIndex= notes[rootIndex+3];\n    }\n\n    //flat fifth index\n    let fifthIndex;\n      if(rootIndex+6 > 11){\n      fifthIndex = (rootIndex + 6) - notes.length;\n    } else{\n      fifthIndex= rootIndex+6;\n    }\n\n    //seventh index diminished (double flat)\n    let seventhIndex;\n    if((rootIndex+9) > 11){\n      seventhIndex = (rootIndex + 9) - notes.length;\n     } else{\n      seventhIndex= rootIndex+9;\n     }\n\n    let arrResult = [notes[rootIndex],thirdIndex ,notes[fifthIndex],notes[seventhIndex]];\n      return arrResult.join(' ');\n  }\n\n  //AUGMENTED7\n  else if(type === 'Augmented7'){\n    let root = roots.charAt(0).toUpperCase() + roots.slice(1); \n    let rootIndex= notes.indexOf(root);\n    \n    //mayor\n    let thirdIndex;\n      if((rootIndex+4) > 11){\n      thirdIndex = (rootIndex + 4) - notes.length;\n    } else{\n      thirdIndex= rootIndex+4;\n    }\n      \n     //sharp fifth index\n     let fifthIndex;\n     if(rootIndex+8 > 11){\n     fifthIndex = (rootIndex + 8) - notes.length;\n   } else{\n     fifthIndex= rootIndex+8;\n   }\n\n    // minor seventh\n    let seventhIndex;\n    if(rootIndex+10 > 11){\n      seventhIndex = (rootIndex + 10) - notes.length;\n    } else{\n      seventhIndex= rootIndex+10;\n    }\n\n    let arrResult = [notes[rootIndex],notes[thirdIndex],notes[fifthIndex],notes[seventhIndex]];\n      return arrResult.join(' ');\n    }\n\n    //MAYOR9\n    else if(type==='Mayor9'){\n\n      //9th note\n      let root = roots.charAt(0).toUpperCase() + roots.slice(1);\n      let rootIndex= notes.indexOf(root);\n      let extentionIndex;\n      if((rootIndex+2) > 11){\n        extentionIndex = (rootIndex + 2) - notes.length;\n      } else{\n        extentionIndex = rootIndex+2;\n      }\n\n     return chord(roots,'Mayor7')+' '+ notes[extentionIndex];\n    }\n\n    //MINOR9\n    else if(type==='Minor9'){\n\n      //9th note\n      let root = roots.charAt(0).toUpperCase() + roots.slice(1);\n      let rootIndex= notes.indexOf(root);\n      let extentionIndex;\n      if((rootIndex+2) > 11){\n        extentionIndex = (rootIndex + 2) - notes.length;\n      } else{\n        extentionIndex = rootIndex+2;\n      }\n\n     return chord(roots,'Minor7')+' '+ notes[extentionIndex];\n    }\n\n    //DOMINANT9\n    else if(type==='Dominant9'){\n\n      //9th note\n      let root = roots.charAt(0).toUpperCase() + roots.slice(1);\n      let rootIndex= notes.indexOf(root);\n      let extentionIndex;\n      if((rootIndex+2) > 11){\n        extentionIndex = (rootIndex + 2) - notes.length;\n      } else{\n        extentionIndex = rootIndex+2;\n      }\n\n     return chord(roots,'Dominant7')+' '+ notes[extentionIndex];\n    }\n\n  //MAYOR11\n        else if(type==='Mayor11'){\n\n          //11th note\n          let root = roots.charAt(0).toUpperCase() + roots.slice(1);\n          let rootIndex= notes.indexOf(root);\n          let extentionIndex;\n          if((rootIndex+5) > 11){\n            extentionIndex = (rootIndex + 5) - notes.length;\n          } else{\n            extentionIndex = rootIndex+5;\n          }\n    \n         return chord(roots,'Mayor9')+' '+ notes[extentionIndex];\n        }\n    \n  //MINOR11\n        else if(type==='Minor11'){\n    \n          //11th note\n          let root = roots.charAt(0).toUpperCase() + roots.slice(1);\n          let rootIndex= notes.indexOf(root);\n          let extentionIndex;\n          if((rootIndex+5) > 11){\n            extentionIndex = (rootIndex + 5) - notes.length;\n          } else{\n            extentionIndex = rootIndex+5;\n          }\n    \n         return chord(roots,'Minor9')+' '+ notes[extentionIndex];\n        }\n\n    //DOMINANT11\n    else if(type==='Dominant11'){\n\n      //9th note\n      let root = roots.charAt(0).toUpperCase() + roots.slice(1);\n      let rootIndex= notes.indexOf(root);\n      let extentionIndex;\n      if((rootIndex+5) > 11){\n        extentionIndex = (rootIndex + 5) - notes.length;\n      } else{\n        extentionIndex = rootIndex+5;\n      }\n\n     return chord(roots,'Dominant9')+' '+ notes[extentionIndex];\n    }\n\n   //MAYOR13\n     else if(type==='Mayor13'){\n\n      //13th note\n      let root = roots.charAt(0).toUpperCase() + roots.slice(1);\n      let rootIndex= notes.indexOf(root);\n      let extentionIndex;\n      if((rootIndex+9) > 11){\n        extentionIndex = (rootIndex + 9) - notes.length;\n      } else{\n        extentionIndex = rootIndex+9;\n      }\n\n     return chord(roots,'Mayor11')+' '+ notes[extentionIndex];\n    }\n\n//MINOR13\n    else if(type==='Minor13'){\n\n      //13th note\n      let root = roots.charAt(0).toUpperCase() + roots.slice(1);\n      let rootIndex= notes.indexOf(root);\n      let extentionIndex;\n      if((rootIndex+9) > 11){\n        extentionIndex = (rootIndex + 9) - notes.length;\n      } else{\n        extentionIndex = rootIndex+9;\n      }\n\n     return chord(roots,'Minor11')+' '+ notes[extentionIndex];\n    }\n\n     //DOMINANT13\n     else if(type==='Dominant13'){\n\n      //9th note\n      let root = roots.charAt(0).toUpperCase() + roots.slice(1);\n      let rootIndex= notes.indexOf(root);\n      let extentionIndex;\n      if((rootIndex+9) > 11){\n        extentionIndex = (rootIndex + 9) - notes.length;\n      } else{\n        extentionIndex = rootIndex+9;\n      }\n\n     return chord(roots,'Dominant11')+' '+ notes[extentionIndex];\n    } \n    \n}\n\n\n\n/*     console.log(\nchord('A#','minor')\n  ); \n   */\n\n export {chord}; \n\n//naturalized some third exp: C minor = C Eb G not C D# G\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}