{"ast":null,"code":"var scale = function scale(roots, type) {\n  var notes = ['C', 'C#', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'];\n  if (type === 'Mayor') {\n    var mayorInterval = [0, 2, 4, 5, 7, 9, 11];\n    return scaleIntervalInput(roots, mayorInterval);\n  } else if (type === 'Minor(Natural)') {\n    var minorInterval = [0, 2, 3, 5, 7, 8, 10];\n    return scaleIntervalInput(roots, minorInterval);\n  } else if (type === 'Harmonic-Minor') {\n    var _minorInterval = [0, 2, 3, 5, 7, 8, 11];\n    return scaleIntervalInput(roots, _minorInterval);\n  } else if (type === 'Melodic-Minor') {\n    var _minorInterval2 = [0, 2, 3, 5, 7, 9, 11, 12, 10, 8, 7, 5, 3, 2, 0];\n    return scaleIntervalInput(roots, _minorInterval2);\n  } else if (type === 'Pentatonic-Mayor') {\n    var pentatonicMayorInterval = [0, 2, 4, 7, 9];\n    return scaleIntervalInput(roots, pentatonicMayorInterval);\n  } else if (type === 'Pentatonic-Minor') {\n    var pentatonicMinorInterval = [0, 3, 5, 7, 10];\n    return scaleIntervalInput(roots, pentatonicMinorInterval);\n  } else if (type === 'Whole-Tone') {\n    var wholeToneInterval = [0, 2, 4, 6, 8, 10];\n    return scaleIntervalInput(roots, wholeToneInterval);\n  } else if (type === 'Augmented') {\n    var augmentedInterval = [0, 3, 4, 7, 8, 11];\n    return scaleIntervalInput(roots, augmentedInterval);\n  } else if (type === 'Diminished') {\n    var diminishedInterval = [0, 2, 3, 5, 6, 8, 9, 11];\n    return scaleIntervalInput(roots, diminishedInterval);\n  } else {\n    return '';\n  }\n};\nvar scaleIntervalInput = function scaleIntervalInput(roots, interval) {\n  var notes = ['C', 'C#', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'];\n  var root = roots.charAt(0).toUpperCase() + roots.slice(1);\n  var rootIndex = notes.indexOf(root);\n  var arrScale = [];\n  for (var i = 0; i < interval.length; i++) {\n    var scalePosition = rootIndex + interval[i];\n    if (scalePosition > 11) {\n      scalePosition -= notes.length;\n    }\n    arrScale.push(notes[scalePosition]);\n  }\n  return arrScale.join(' ');\n};\nexport { scale };","map":{"version":3,"names":["scale","roots","type","notes","mayorInterval","scaleIntervalInput","minorInterval","pentatonicMayorInterval","pentatonicMinorInterval","wholeToneInterval","augmentedInterval","diminishedInterval","interval","root","charAt","toUpperCase","slice","rootIndex","indexOf","arrScale","i","length","scalePosition","push","join"],"sources":["/home/kevin/Code Practice/chord-scale-app/logic_function/scale-logic.js"],"sourcesContent":["\n\nconst scale= function(roots,type){\n    const notes =['C','C#','D','Eb','E','F','F#','G','Ab','A','Bb','B'];\n\n    if(type === 'Mayor'){\n        let mayorInterval=[ 0, 2, 4, 5, 7, 9, 11];\n        return  scaleIntervalInput(roots,mayorInterval)\n    } else if( type === 'Minor(Natural)'){\n        let minorInterval =[ 0, 2, 3, 5, 7, 8, 10];\n        return scaleIntervalInput(roots, minorInterval);\n    } else if( type === 'Harmonic-Minor'){\n        let minorInterval =[ 0, 2, 3, 5, 7, 8, 11];\n        return scaleIntervalInput(roots, minorInterval);\n    } else if( type === 'Melodic-Minor'){\n        let minorInterval =[ 0, 2, 3, 5, 7, 9, 11, 12, 10, 8, 7, 5, 3, 2, 0];\n        return scaleIntervalInput(roots, minorInterval);\n    } else if (type === 'Pentatonic-Mayor'){\n        let pentatonicMayorInterval =[ 0, 2, 4, 7, 9];\n        return scaleIntervalInput(roots, pentatonicMayorInterval);\n    } else if (type === 'Pentatonic-Minor'){\n        let pentatonicMinorInterval = [ 0,3,5,7,10];\n        return scaleIntervalInput(roots,pentatonicMinorInterval);\n    } else if (type === 'Whole-Tone'){\n        let wholeToneInterval = [0,2,4,6,8,10];\n        return scaleIntervalInput(roots,wholeToneInterval);\n    } else if (type === 'Augmented'){\n        let augmentedInterval = [0, 3, 4, 7, 8, 11];\n        return scaleIntervalInput(roots,augmentedInterval);\n    } else if (type === 'Diminished'){\n        let diminishedInterval = [0,2,3,5,6,8,9,11];\n        return scaleIntervalInput(roots,diminishedInterval);\n    } else {\n        return ''\n    }\n\n}\n\n\nconst scaleIntervalInput = (roots, interval)=>{\n    const notes =['C','C#','D','Eb','E','F','F#','G','Ab','A','Bb','B'];\n\n    let root = roots.charAt(0).toUpperCase() + roots.slice(1);  \n    let rootIndex= notes.indexOf(root);\n\n  \n    let arrScale = [];\n    for (let i=0; i< interval.length ; i++){\n        let scalePosition=  rootIndex + interval[i];\n        if(scalePosition > 11){\n            scalePosition -= notes.length;\n        }\n\n        arrScale.push(\n            notes[ scalePosition ]\n        );\n    }\n    return arrScale.join(' ');\n}\n\nexport {scale};"],"mappings":"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"},"metadata":{},"sourceType":"module"}