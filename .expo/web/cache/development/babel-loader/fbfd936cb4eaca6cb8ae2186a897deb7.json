{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport DropdownListItem from \"./DropdownListItem\";\nimport { colors } from \"./styles/colors\";\nvar DropdownList = function DropdownList(_ref) {\n  var options = _ref.options,\n    optionLabel = _ref.optionLabel,\n    optionValue = _ref.optionValue,\n    isMultiple = _ref.isMultiple,\n    selectedItems = _ref.selectedItems,\n    selectedItem = _ref.selectedItem,\n    handleMultipleSelections = _ref.handleMultipleSelections,\n    handleSingleSelection = _ref.handleSingleSelection,\n    primaryColor = _ref.primaryColor;\n  return React.createElement(FlatList, {\n    data: options,\n    extraData: isMultiple ? selectedItems : selectedItem,\n    initialNumToRender: 5,\n    ListEmptyComponent: React.createElement(View, {\n      style: styles.emptyListStyle\n    }, React.createElement(Text, null, \"No options available\")),\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(View, {\n        style: styles.itemSeparatorStyle\n      });\n    },\n    renderItem: function renderItem(item) {\n      return _renderItem(item, {\n        optionLabel: optionLabel,\n        optionValue: optionValue,\n        isMultiple: isMultiple,\n        selectedOption: isMultiple ? selectedItems : selectedItem,\n        onChange: isMultiple ? handleMultipleSelections : handleSingleSelection,\n        primaryColor: primaryColor\n      });\n    },\n    keyExtractor: function keyExtractor(_item, index) {\n      return \"Options\" + index;\n    }\n  });\n};\nvar _renderItem = function _renderItem(_ref2, props) {\n  var item = _ref2.item;\n  return React.createElement(DropdownListItem, {\n    item: item,\n    optionLabel: props.optionLabel,\n    optionValue: props.optionValue,\n    isMultiple: props.isMultiple,\n    selectedOption: props.selectedOption,\n    onChange: props.onChange,\n    primaryColor: props.primaryColor\n  });\n};\nvar styles = StyleSheet.create({\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'flex-end'\n  },\n  modalBackgroundStyle: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  modalOptionsContainer: {\n    maxHeight: '50%',\n    backgroundColor: colors.white,\n    borderTopLeftRadius: 16,\n    borderTopRightRadius: 16\n  },\n  itemSeparatorStyle: {\n    backgroundColor: colors.gray,\n    height: 1,\n    opacity: 0.15\n  },\n  emptyListStyle: {\n    alignItems: 'center',\n    width: '100%',\n    marginVertical: 20\n  }\n});\nexport default DropdownList;","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAAA;AAAA;AAAA;AAAA;AAEA,OAAOC,gBAAP;AACA,SAASC,MAAT;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAGC,MAUV;EAAA,IATTC,OADoB,GAUXD,KATTC,OADoB;IAEpBC,WAFoB,GAUXF,KARTE,WAFoB;IAGpBC,WAHoB,GAUXH,KAPTG,WAHoB;IAIpBC,UAJoB,GAUXJ,KANTI,UAJoB;IAKpBC,aALoB,GAUXL,KALTK,aALoB;IAMpBC,YANoB,GAUXN,KAJTM,YANoB;IAOpBC,wBAPoB,GAUXP,KAHTO,wBAPoB;IAQpBC,qBARoB,GAUXR,KAFTQ,qBARoB;IASpBC,eACST,KADTS;EAEA,OACEb,oBAACc,QAAD;IACEC,IAAI,EAAEV,OADR;IAEEW,SAAS,EAAER,UAAU,GAAGC,aAAH,GAAmBC,YAF1C;IAGEO,kBAAkB,EAAE,CAHtB;IAIEC,kBAAkB,EAChBlB,oBAACmB,IAAD;MAAMC,KAAK,EAAEC,MAAM,CAACC;IAApB,GACEtB,oBAACuB,IAAD,+BADF,CALJ;IASEC,sBAAsB,EAAE;MAAA,OAAMxB,oBAACmB,IAAD;QAAMC,KAAK,EAAEC,MAAM,CAACI;MAApB,EAThC;IAAA;IAUEC,UAAU,EAAGC,wBAAD;MAAA,OACVC,WAAW,CAACD,IAAD,EAAO;QAChBrB,WADgB,EAChBA,WADgB;QAEhBC,WAFgB,EAEhBA,WAFgB;QAGhBC,UAHgB,EAGhBA,UAHgB;QAIhBqB,cAAc,EAAErB,UAAU,GAAGC,aAAH,GAAmBC,YAJ7B;QAKhBoB,QAAQ,EAAEtB,UAAU,GAChBG,wBADgB,GAEhBC,qBAPY;QAQhBC;MARgB,CAAP,CAXf;IAAA;IAsBEkB,YAAY,EAAE,sBAACC,KAAD,EAAQC,KAAR;MAAA,mBAA4BA,KAAM;IAAA;EAtBlD,EADF;AA0BD,CArCD;AAuCA,IAAML,WAAW,GAAG,SAAdA,WAAW,CAAGM,OAAgBC,KAAhB,EAA+B;EAAA,IAA5BR,OAA4BO,MAA5BP;EACrB,OACE3B,oBAACC,gBAAD;IACE0B,IAAI,EAAEA,IADR;IAEErB,WAAW,EAAE6B,KAAK,CAAC7B,WAFrB;IAGEC,WAAW,EAAE4B,KAAK,CAAC5B,WAHrB;IAIEC,UAAU,EAAE2B,KAAK,CAAC3B,UAJpB;IAKEqB,cAAc,EAAEM,KAAK,CAACN,cALxB;IAMEC,QAAQ,EAAEK,KAAK,CAACL,QANlB;IAOEjB,YAAY,EAAEsB,KAAK,CAACtB;EAPtB,EADF;AAWD,CAZD;AAcA,IAAMQ,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;EAC/BC,cAAc,EAAE;IACdC,IAAI,EAAE,CADQ;IAEdC,cAAc,EAAE;EAFF,CADe;EAK/BC,oBAAoB,EAAE;IAAEC,eAAe,EAAE;EAAnB,CALS;EAM/BC,qBAAqB,EAAE;IACrBC,SAAS,EAAE,KADU;IAErBF,eAAe,EAAExC,MAAM,CAAC2C,KAFH;IAGrBC,mBAAmB,EAAE,EAHA;IAIrBC,oBAAoB,EAAE;EAJD,CANQ;EAY/BtB,kBAAkB,EAAE;IAClBiB,eAAe,EAAExC,MAAM,CAAC8C,IADN;IAElBC,MAAM,EAAE,CAFU;IAGlBC,OAAO,EAAE;EAHS,CAZW;EAiB/B5B,cAAc,EAAE;IAAE6B,UAAU,EAAE,QAAd;IAAwBC,KAAK,EAAE,MAA/B;IAAuCC,cAAc,EAAE;EAAvD;AAjBe,CAAlB,CAAf;AAoBA,eAAelD,YAAf","names":["React","DropdownListItem","colors","DropdownList","_ref","options","optionLabel","optionValue","isMultiple","selectedItems","selectedItem","handleMultipleSelections","handleSingleSelection","primaryColor","FlatList","data","extraData","initialNumToRender","ListEmptyComponent","View","style","styles","emptyListStyle","Text","ItemSeparatorComponent","itemSeparatorStyle","renderItem","item","_renderItem","selectedOption","onChange","keyExtractor","_item","index","_ref2","props","StyleSheet","create","modalContainer","flex","justifyContent","modalBackgroundStyle","backgroundColor","modalOptionsContainer","maxHeight","white","borderTopLeftRadius","borderTopRightRadius","gray","height","opacity","alignItems","width","marginVertical"],"sources":["DropdownList.tsx"],"sourcesContent":["import React from 'react';\nimport { View, FlatList, StyleSheet, Text } from 'react-native';\nimport DropdownListItem from './DropdownListItem';\nimport { colors } from './styles/colors';\n\nconst DropdownList = ({\n  options,\n  optionLabel,\n  optionValue,\n  isMultiple,\n  selectedItems,\n  selectedItem,\n  handleMultipleSelections,\n  handleSingleSelection,\n  primaryColor,\n}: any) => {\n  return (\n    <FlatList\n      data={options}\n      extraData={isMultiple ? selectedItems : selectedItem}\n      initialNumToRender={5}\n      ListEmptyComponent={\n        <View style={styles.emptyListStyle}>\n          <Text>No options available</Text>\n        </View>\n      }\n      ItemSeparatorComponent={() => <View style={styles.itemSeparatorStyle} />}\n      renderItem={(item) =>\n        _renderItem(item, {\n          optionLabel,\n          optionValue,\n          isMultiple,\n          selectedOption: isMultiple ? selectedItems : selectedItem,\n          onChange: isMultiple\n            ? handleMultipleSelections\n            : handleSingleSelection,\n          primaryColor,\n        })\n      }\n      keyExtractor={(_item, index) => `Options${index}`}\n    />\n  );\n};\n\nconst _renderItem = ({ item }: any, props: any) => {\n  return (\n    <DropdownListItem\n      item={item}\n      optionLabel={props.optionLabel}\n      optionValue={props.optionValue}\n      isMultiple={props.isMultiple}\n      selectedOption={props.selectedOption}\n      onChange={props.onChange}\n      primaryColor={props.primaryColor}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n  },\n  modalBackgroundStyle: { backgroundColor: 'rgba(0, 0, 0, 0.5)' },\n  modalOptionsContainer: {\n    maxHeight: '50%',\n    backgroundColor: colors.white,\n    borderTopLeftRadius: 16,\n    borderTopRightRadius: 16,\n  },\n  itemSeparatorStyle: {\n    backgroundColor: colors.gray,\n    height: 1,\n    opacity: 0.15,\n  },\n  emptyListStyle: { alignItems: 'center', width: '100%', marginVertical: 20 },\n});\n\nexport default DropdownList;\n"]},"metadata":{},"sourceType":"module"}